$date
  Sat May 09 22:16:30 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 4 # d[3:0] $end
$var reg 1 $ bin $end
$var reg 1 % bout $end
$scope module uut $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( bin $end
$var reg 1 ) bout $end
$var reg 4 * d[3:0] $end
$var reg 3 + bout_tmp[2:0] $end
$scope module fs_0 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . bin $end
$var reg 1 / d $end
$var reg 1 0 bout $end
$upscope $end
$scope module fs_1 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 bin $end
$var reg 1 4 d $end
$var reg 1 5 bout $end
$upscope $end
$scope module fs_2 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 bin $end
$var reg 1 9 d $end
$var reg 1 : bout $end
$upscope $end
$scope module fs_3 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = bin $end
$var reg 1 > d $end
$var reg 1 ? bout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0001 !
b0001 "
b0000 #
0$
0%
b0001 &
b0001 '
0(
0)
b0000 *
b000 +
1,
1-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
#20000000
b0111 !
b0101 "
b0010 #
b0111 &
b0101 '
b0010 *
11
14
16
17
#100000000
b0000 !
b0000 "
b0000 #
b0000 &
b0000 '
b0000 *
0,
0-
01
04
06
07
